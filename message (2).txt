function App() {
  const [leftScore, setLeftScore] = useState(0);
  const [rightScore, setRightScore] = useState(0);
  const [timer, setTimer] = useState("3:00"); // Initial timer 3:00
  const [matchEnded, setMatchEnded] = useState(false);
  const [isTimerRunning, setIsTimerRunning] = useState(false);
  const [intervalId, setIntervalId] = useState(null);

  useEffect(() => {
    let timeParts = timer.split(":");
    let minutes = parseInt(timeParts[0]);
    let seconds = parseInt(timeParts[1]);

    if (isTimerRunning && (minutes > 0 || seconds > 0)) {
      const id = setInterval(() => {
        if (seconds > 0) {
          setTimer(
            `${minutes.toString().padStart(2, "0")}:${(seconds - 1)
              .toString()
              .padStart(2, "0")}`
          );
          seconds--;
        } else if (minutes > 0) {
          setTimer(
            `${(minutes - 1).toString().padStart(2, "0")}:${"59".padStart(
              2,
              "0"
            )}`
          );
          minutes--;
          seconds = 59;
        } else {
          clearInterval(id);
          setIsTimerRunning(false);
        }
      }, 1000);
      setIntervalId(id);
    } else {
      clearInterval(intervalId);
    }

    return () => clearInterval(intervalId);
  }, [isTimerRunning, timer]);

  const handleLeftScoreChange = (amount) => {
    if (!matchEnded) {
      setLeftScore((prevScore) => Math.min(prevScore + amount, 5));
      checkEndMatch();
    }
  };

  const handleRightScoreChange = (amount) => {
    if (!matchEnded) {
      setRightScore((prevScore) => Math.min(prevScore + amount, 5));
      checkEndMatch();
    }
  };

  const checkEndMatch = () => {
    if (leftScore === 5 || rightScore === 5) {
      setMatchEnded(true);
      setIsTimerRunning(false); // Pause timer when match ends
    }
  };

  const resetMatch = () => {
    setLeftScore(0);
    setRightScore(0);
    setTimer("3:00");
    setMatchEnded(false);
    setIsTimerRunning(false);
  };

  const toggleTimer = () => {
    setIsTimerRunning(!isTimerRunning);
  };

  return (
    <div
      style={{
        background: "linear-gradient(to right, #0f0c29, #302b63, #24243e)",
        height: "100vh",
        display: "flex",
        flexDirection: "column",
        alignItems: "center",
        justifyContent: "center",
      }}
    >
      <div
        style={{
          border: "2px solid black",
          padding: "30px",
          borderRadius: "10px",
          backgroundColor: "rgba(255, 255, 255, 0.8)",
          boxShadow: "0px 0px 20px rgba(0, 0, 0, 0.5)",
        }}
      >
        <div
          style={{
            display: "flex",
            justifyContent: "space-around",
            alignItems: "center",
            width: "100%",
            marginBottom: "30px",
          }}
        >
          <div style={{ textAlign: "center" }}>
            <img
              src="/left-logo.png"
              alt="Left Logo"
              style={{ maxWidth: "100px", maxHeight: "100px" }}
            />
          </div>
          <div
            style={{
              width: "150px",
              height: "150px",
              overflow: "hidden",
              borderRadius: "50%",
              border: "3px solid gold",
              boxShadow: "0px 0px 10px rgba(0, 0, 0, 0.3)",
            }}
          >
            <img
              src="/emblem.png"
              alt="Emblem"
              style={{ width: "100%", height: "100%", objectFit: "cover" }}
            />
          </div>
          <div style={{ textAlign: "center" }}>
            <img
              src="/right-logo.png"
              alt="Right Logo"
              style={{ maxWidth: "100px", maxHeight: "100px" }}
            />
          </div>
        </div>
        <div
          style={{
            display: "flex",
            justifyContent: "space-around",
            alignItems: "center",
            width: "100%",
          }}
        >
          <div
            style={{
              display: "flex",
              flexDirection: "column",
              alignItems: "center",
            }}
          >
            <div style={{ fontSize: "2em", marginBottom: "10px" }}>
              กนกวรรณ
            </div>
            <div
              style={{
                fontSize: "1.2em",
                display: "flex",
                flexDirection: "column",
                alignItems: "center",
              }}
            >
              O / X
              {!matchEnded && (
                <div style={{ display: "flex", marginTop: "5px" }}>
                  <button
                    style={{
                      fontSize: "0.8em",
                      margin: "5px",
                      padding: "5px 10px",
                    }}
                    onClick={() => handleLeftScoreChange(1)}
                  >
                    +1
                  </button>
                  <button
                    style={{
                      fontSize: "0.8em",
                      margin: "5px",
                      padding: "5px 10px",
                    }}
                    onClick={() => handleLeftScoreChange(-1)}
                  >
                    -1
                  </button>
                </div>
              )}
            </div>
            <div
              style={{
                width: "100px",
                height: "100px",
                borderRadius: "50%",
                backgroundColor: "rgba(0, 0, 0, 0.1)",
                border: "2px solid gray",
                display: "flex",
                justifyContent: "center",
                alignItems: "center",
                marginTop: "20px",
                fontSize: "3em",
                fontWeight: "bold",
                color: "white",
                boxShadow: "0px 0px 10px rgba(0, 0, 0, 0.3)",
              }}
            >
              {leftScore}
            </div>
          </div>
          <div
            style={{
              display: "flex",
              flexDirection: "column",
              alignItems: "center",
              marginTop: "30px",
            }}
          >
            <button
              style={{
                fontSize: "1em",
                padding: "5px 10px",
                marginBottom: "10px",
              }}
              onClick={toggleTimer}
            >
              {isTimerRunning ? "Pause" : "Start"}
            </button>
            <div
              style={{
                fontSize: "3em",
                fontWeight: "bold",
                color: "orange",
                textShadow: "0px 0px 5px rgba(0, 0, 0, 0.2)",
              }}
            >
              {timer}
            </div>
          </div>
          <div
            style={{
              display: "flex",
              flexDirection: "column",
              alignItems: "center",
            }}
          >
            <div style={{ fontSize: "2em", marginBottom: "10px" }}>
              กนกลักษณ์
            </div>
            <div
              style={{
                fontSize: "1.2em",
                display: "flex",
                flexDirection: "column",
                alignItems: "center",
              }}
            >
              O / X
              {!matchEnded && (
                <div style={{ display: "flex", marginTop: "5px" }}>
                  <button
                    style={{
                      fontSize: "0.8em",
                      margin: "5px",
                      padding: "5px 10px",
                    }}
                    onClick={() => handleRightScoreChange(1)}
                  >
                    +1
                  </button>
                  <button
                    style={{
                      fontSize: "0.8em",
                      margin: "5px",
                      padding: "5px 10px",
                    }}
                    onClick={() => handleRightScoreChange(-1)}
                  >
                    -1
                  </button>
                </div>
              )}
            </div>
            <div
              style={{
                width: "100px",
                height: "100px",
                borderRadius: "50%",
                backgroundColor: "rgba(0, 0, 0, 0.1)",
                border: "2px solid gray",
                display: "flex",
                justifyContent: "center",
                alignItems: "center",
                marginTop: "20px",
                fontSize: "3em",
                fontWeight: "bold",
                color: "white",
                boxShadow: "0px 0px 10px rgba(0, 0, 0, 0.3)",
              }}
            >
              {rightScore}
            </div>
          </div>
        </div>
        <div
          style={{
            display: "flex",
            justifyContent: "center",
            marginTop: "30px",
          }}
        >
          {matchEnded && (
            <button
              style={{
                fontSize: "1em",
                padding: "10px 20px",
              }}
              onClick={resetMatch}
            >
              Reset
            </button>
          )}
        </div>
      </div>
    </div>
  );
}

export default App;
